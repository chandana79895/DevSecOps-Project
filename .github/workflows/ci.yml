name: DevSecOps Project

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: main
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'

      - name: Remove existing containerd package
        run: |
          sudo apt-get remove -y containerd

      - name: Installing Docker
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo chmod 777 /var/run/docker.sock

      - name: Set up .env file
        env:
          TMDB_V3_API_KEY: ${{ secrets.TMDB_V3_API_KEY }}
        run: |
          echo "TMDB_V3_API_KEY=${{ secrets.TMDB_V3_API_KEY }}" >> .env.${{ secrets.ENV }}

      - name: Running application on Docker
        env:
          TMDB_V3_API_KEY: ${{ secrets.TMDB_V3_API_KEY }}
        run: |
          docker build -t netflix .

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Tag Docker image
        run: |
          docker tag netflix:latest ${{ secrets.DOCKERHUB_USERNAME }}/netflix:latest

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/netflix:latest   

      - name: Run Docker container
        run: |
          docker run -d --name netflix_container -p 8081:80 ${{ secrets.DOCKERHUB_USERNAME }}/netflix:latest

      - name: Test application endpoint
        run: |
          curl http://localhost:8081    